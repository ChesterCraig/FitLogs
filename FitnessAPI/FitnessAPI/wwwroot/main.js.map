{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/entry/entry.component.css","webpack:///./src/app/entry/entry.component.html","webpack:///./src/app/entry/entry.component.ts","webpack:///./src/app/entrylist/entrylist.component.css","webpack:///./src/app/entrylist/entrylist.component.html","webpack:///./src/app/entrylist/entrylist.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/entry.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profilesettings/profilesettings.component.css","webpack:///./src/app/profilesettings/profilesettings.component.html","webpack:///./src/app/profilesettings/profilesettings.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertifyjs.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/entry.service.ts","webpack:///./src/app/usersummary/usersummary.component.css","webpack:///./src/app/usersummary/usersummary.component.html","webpack:///./src/app/usersummary/usersummary.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,4H;;;;;;;;;;;;;;;;;;ACAkD;AACI;AAOtD;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAG,UAAU,CAAC;IAE4B,CAAC;IAEhD,+BAAQ,GAAR;QACE,uEAAuE;QACvE,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC;IARU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAIiC,kEAAW;OAHjC,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACM;AACF;AACW;AACP;AACF;AACM;AAEN;AACa;AACS;AACZ;AACA;AACS;AACZ;AACqB;AAEzC;AACc;AACuC;AAKvF,iDAAiD;AAE1C,SAAS,WAAW;IACzB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAgCD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,kFAAkB;gBAClB,sEAAc;gBACd,sEAAc;gBACd,+EAAiB;gBACjB,mEAAa;gBACb,wFAAoB;gBACpB,oGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC,+CAAM,CAAC;gBAC5B,0DAAW;gBACX,qEAAgB;gBAChB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,kEAAmB;gBACnB,4DAAS,CAAC,OAAO,CAAC;oBAChB,MAAM,EAAE;wBACN,WAAW,EAAE,WAAW;wBACxB,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,qBAAqB,CAAC,CAAM,uBAAuB;qBACxE;iBACF,CAAC;aACH;YACD,SAAS,EAAE,CAAC,6DAAS,CAAC;YACtB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7DtB,6BAA6B,uBAAuB,WAAW,aAAa,GAAG,WAAW,mBAAmB,GAAG,+CAA+C,2a;;;;;;;;;;;ACA/J,0MAA0M,oCAAoC,oBAAoB,mBAAmB,mBAAmB,oBAAoB,uQAAuQ,0CAA0C,m0B;;;;;;;;;;;;;;;;;;;;;;;ACA9hB;AACvC;AACiB;AACF;AACY;AAEC;AACzB;AAO3C;IAOE,wBACU,YAA0B,EAC1B,WAAwB,EACxB,QAA2B,EAC3B,WAAwB;QAHxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAmB;QAC3B,gBAAW,GAAX,WAAW,CAAa;QATxB,WAAM,GAAwB,IAAI,0DAAY,EAAE,CAAC;IAStB,CAAC;IAGtC,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,oDAAoD;YACpD,IAAI,EAAE,CAAC,IAAI,wDAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5F,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,2CAAkB,GAAlB;QAAA,iBAyBC;QAxBC,wBAAwB;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;SACR;QAED,IAAM,aAAa,GAAU;YAC3B,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;YACrB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM;YAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;YAC/B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;YACrC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;SACxC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,SAAS,CACxF,kBAAQ;YACN,KAAI,CAAC,SAAS,GAAG,aAAa,CAAC;YAC/B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACvC,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC3C,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,oCAAW,GAAX;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE;YACrC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC3F,iBAAO;gBACL,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACjC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YACnC,CAAC,EAAE,gBAAM;gBACP,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IApEQ;QAAR,2DAAK,EAAE;wEAAY,mDAAK;qDAAC;IAChB;QAAT,4DAAM,EAAE;wEAAS,0DAAY;kDAA6B;IAFhD,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EASwB,oEAAY;YACb,kEAAW;YACd,8EAAiB;YACd,0DAAW;OAXvB,cAAc,CAsE1B;IAAD,qBAAC;CAAA;AAtE0B;;;;;;;;;;;;ACd3B,+DAA+D,mJ;;;;;;;;;;;ACA/D,qkB;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAEF;AAOvD;IAEE,4BAAoB,YAA0B,EAAU,WAAwB;QAA5D,iBAAY,GAAZ,YAAY,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAIrF,qCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aAClE,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aAChE,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAuD;IACvD,wCAAW,GAAX,UAAY,aAAoB;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,EAA7B,CAA6B,CAAC,CAAC;IAC7E,CAAC;IAvBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAGkC,oEAAY,EAAuB,kEAAW;OAFrE,kBAAkB,CAyB9B;IAAD,yBAAC;CAAA;AAzB8B;;;;;;;;;;;;;;;;;;;;ACVY;AACW;AACC;AAKvD;IACE,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,+BAAW,GAAX;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,qDAAqD;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAXU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAEiC,kEAAW,EAAkB,sDAAM;OADzD,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;;ACPtB,+DAA+D,uI;;;;;;;;;;;ACA/D,opB;;;;;;;;;;;;;;;;;;ACAkD;AACK;AAOvD;IAGE,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,iBAAY,GAAG,KAAK,CAAC;IAE2B,CAAC;IAEjD,gCAAQ,GAAR;IACA,CAAC;IAED,0CAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,0CAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAdU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAIiC,kEAAW;OAHjC,aAAa,CAgBzB;IAAD,oBAAC;CAAA;AAhByB;;;;;;;;;;;;ACR1B,oDAAoD,oBAAoB,GAAG,+CAA+C,+T;;;;;;;;;;;ACA1H,qJAAqJ,mDAAmD,u2B;;;;;;;;;;;;;;;;;;;ACAtJ;AACK;AACY;AAOnE;IAGE,wBAAmB,WAAwB,EAAU,QAA2B;QAA7D,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAmB;QAFhF,UAAK,GAAQ,EAAE,CAAC;IAEoE,CAAC;IAErF,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;IAED,iCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IA1BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAIgC,kEAAW,EAAoB,8EAAiB;OAHrE,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;;ACT3B;AAAA;AAAA,cAAc;AAEd;IAAA;IAMA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;ACRD,+DAA+D,2I;;;;;;;;;;;ACA/D,yb;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,mK;;;;;;;;;;;ACA/D,wM;;;;;;;;;;;;;;;;;;ACAkD;AACK;AAOvD;IAEE,kCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,2CAAQ,GAAR;IAEA,CAAC;IANU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iIAA+C;;SAEhD,CAAC;+EAGiC,kEAAW;OAFjC,wBAAwB,CAQpC;IAAD,+BAAC;CAAA;AARoC;;;;;;;;;;;;ACRrC,+DAA+D,mJ;;;;;;;;;;;ACA/D,8uB;;;;;;;;;;;;;;;;;;;ACAwE;AACjB;AACY;AAOnE;IAIE,2BAAoB,WAAwB,EAAU,QAA2B;QAA7D,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAmB;QAHvE,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC9C,UAAK,GAAQ,EAAE,CAAC;IAEqE,CAAC;IAEtF,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAClD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAClD,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IApBS;QAAT,4DAAM,EAAE;;6DAAqC;IADnC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAKiC,kEAAW,EAAoB,8EAAiB;OAJtE,iBAAiB,CAuB7B;IAAD,wBAAC;CAAA;AAvB6B;;;;;;;;;;;;;ACP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEqB;AACH;AACZ;AACiC;AAGvF,8BAA8B;AACvB,IAAM,MAAM,GAAW;IAC5B,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iFAAkB,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IAC1E,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,mGAAwB,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IACzF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;CACjD,CAAC;;;;;;;;;;;;;;;;;;AChByC;AAM3C;IAEE;IAAgB,CAAC;IAGjB,mCAAO,GAAP,UAAQ,OAAe,EAAE,UAAqB;QAC5C,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YAClC,IAAI,CAAC,EAAE;gBACL,UAAU,EAAE,CAAC;aACd;iBAAM,GAAE;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,iCAAK,GAAL,UAAM,OAAe;QACnB,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAED,mCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,mCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IA3BU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,iBAAiB,CA6B7B;IAAD,wBAAC;CAAA;AA7B6B;;;;;;;;;;;;;;;;;;;;;;ACNa;AACO;AACb;AACiB;AACO;AAK7D;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,YAAO,GAAG,qEAAW,CAAC,MAAM,GAAG,MAAM,CAAC;QACtC,cAAS,GAAG,IAAI,mEAAgB,CAAC;IAFO,CAAC;IAKzC,2BAAK,GAAL,UAAM,KAAU;QAAhB,iBAYC;QAXC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,KAAK,CAAC;aAClD,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAE5D;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,8BAAQ,GAAR,UAAU,KAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,4BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,8BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,+CAA+C;IAC/C,qCAAe,GAAf;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACvD;IACH,CAAC;IAxCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,WAAW,CAyCvB;IAAD,kBAAC;CAAA;AAzCuB;;;;;;;;;;;;;;;;;;;;ACTmB;AACoB;AAIF;AAG7D,8CAA8C;AAC9C,wBAAwB;AACxB,mCAAmC;AACnC,sEAAsE;AACtE,UAAU;AACV,KAAK;AACL,gDAAgD;AAKhD;IAGE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,qEAAW,CAAC,MAAM,GAAG,cAAc,CAAC;IAEN,CAAC;IAEzC,oCAAa,GAAb,UAAc,MAAc;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,kCAAW,GAAX,UAAY,MAAc,EAAE,YAAmB;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;IAC5E,CAAC;IAED,kCAAW,GAAX,UAAY,MAAc,EAAE,QAAe;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,kCAAW,GAAX,UAAY,MAAc;QACxB,IAAM,QAAQ,GAAU;YACtB,MAAM,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC5B,QAAQ,EAAE,MAAM;SACjB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAvBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;ACnBzB,+DAA+D,2J;;;;;;;;;;;ACA/D,4L;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;;ACPjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,6BAA6B;CACtC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-navbar></app-navbar>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'fit-logs';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    // Trigger parsing of login token if we have one saved in local storage\n    this.authService.parseLocalToken();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BsDropdownModule } from 'ngx-bootstrap';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { EntrylistComponent } from './entrylist/entrylist.component';\nimport { EntryComponent } from './entry/entry.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { UsersummaryComponent } from './usersummary/usersummary.component';\n\nimport { routes } from './routes';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ProfilesettingsComponent } from './profilesettings/profilesettings.component';\n\n\n\n\n// Bring in services and put them in providers???\n\nexport function tokenGetter(): string {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    EntrylistComponent,\n    EntryComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    UsersummaryComponent,\n    ProfilesettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule,\n    BsDropdownModule.forRoot(),\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,                       // How it gets token\n        whitelistedDomains: ['localhost:5001'],         // Routes to pass token\n        blacklistedRoutes: ['localhost:5001/Auth']      // Routes without token\n      }\n    })\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".cc-close {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n\\nlabel {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50cnkvZW50cnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sUUFBUTtBQUNWOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2VudHJ5L2VudHJ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2MtY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"card w-100 mb-3\\\">\\n  <!-- READ ONLY VIEW -->\\n  <div *ngIf=\\\"!editMode\\\" (click)=\\\"enableEdit()\\\">\\n      <div class=\\\"card-body\\\">\\n          <h3 class=\\\"card-title\\\">{{thisEntry?.date | date: 'fullDate'}}</h3>\\n        <p>{{thisEntry.summary}}</p>\\n        <p>{{thisEntry.activity}}</p>\\n    </div>\\n  </div>\\n\\n  <!-- EDITABLE VIEW -->\\n  <div *ngIf=\\\"editMode\\\" >\\n      <button class=\\\"btn btn-danger cc-close\\\" (click)=\\\"removeEntry()\\\" *ngIf=\\\"editMode\\\">Delete</button>\\n      <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-title\\\">{{entryForm.value?.date | date: 'fullDate'}}</h3>\\n        <form [formGroup]=\\\"entryForm\\\" (ngSubmit)=\\\"submitEntryChanges()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-group\\\">\\n            Date\\n            </label>\\n            <input id=\\\"date\\\" type=\\\"date\\\" formControlName=\\\"date\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>\\n            Summary\\n            </label>\\n            <textarea id =\\\"summary\\\" formControlName=\\\"summary\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>\\n              Activity\\n            </label>\\n            <textarea id=\\\"activity\\\" formControlName=\\\"activity\\\"></textarea>\\n          </div>\\n        </form>\\n      </div>\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"submitEntryChanges()\\\">Save</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Entry } from '../models/entry';\nimport { EntryService } from '../services/entry.service';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyjsService } from '../services/alertifyjs.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-entry',\n  templateUrl: './entry.component.html',\n  styleUrls: ['./entry.component.css']\n})\nexport class EntryComponent implements OnInit {\n  @Input() thisEntry: Entry;\n  @Output() delete: EventEmitter<Entry> = new EventEmitter();\n\n  editMode: Boolean;\n  entryForm: FormGroup;\n\n  constructor(\n    private entryService: EntryService,\n    private authService: AuthService,\n    private alertify: AlertifyjsService,\n    private formBuilder: FormBuilder) {}\n\n\n  ngOnInit() {\n    this.disableEdit();\n    this.entryForm = this.formBuilder.group({\n      // date: [this.thisEntry.date, Validators.required],\n      date: [new DatePipe('en-gb').transform(this.thisEntry.date, 'y-MM-dd'), Validators.required],\n      summary: [this.thisEntry.summary],\n      activity: [this.thisEntry.activity]\n    });\n  }\n\n  submitEntryChanges() {\n    // On submit of the form\n    if (!this.entryForm.dirty) {\n      this.disableEdit();\n      return;\n    }\n\n    const entryToSubmit: Entry = {\n      id: this.thisEntry.id,\n      userId: this.thisEntry.userId,\n      date: this.entryForm.value.date,\n      summary: this.entryForm.value.summary,\n      activity: this.entryForm.value.activity\n    };\n\n    this.entryService.updateEntry(this.authService.decodedToken.nameId, entryToSubmit).subscribe(\n        newEntry => {\n          this.thisEntry = entryToSubmit;\n          this.alertify.success('Changes Saved');\n          this.disableEdit();\n        },\n        error => {\n          this.alertify.error('Failed to update!');\n        }\n    );\n  }\n\n  removeEntry() {\n    this.alertify.confirm('Are you sure?', () => {\n      this.entryService.removeEntry(this.authService.decodedToken.nameId, this.thisEntry).subscribe(\n        success => {\n          this.alertify.success('Removed');\n          this.delete.emit(this.thisEntry);\n        }, failed => {\n          this.alertify.error('Failed to remove entry');\n        });\n    });\n  }\n\n  enableEdit() {\n      this.editMode = true;\n  }\n\n  disableEdit() {\n    this.editMode = false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudHJ5bGlzdC9lbnRyeWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n      <div class=\\\"jumbotron jumbotron-fluid\\\">\\n          <div class=\\\"container\\\">\\n            <h1 class=\\\"display-4\\\">Workout Log</h1>\\n            <button class=\\\"btn-success\\\" (click)=\\\"addEntry()\\\">Log a new workout</button>\\n            </div>\\n          </div>\\n        </div>\\n    <div class=\\\"col-6\\\">\\n      <app-usersummary></app-usersummary>\\n  </div>\\n</div>\\n<div class=\\\"pt-3 pb-3\\\">\\n  <app-entry *ngFor=\\\"let e of entries\\\" [thisEntry]=\\\"e\\\" (delete)=\\\"deleteEntry($event)\\\"></app-entry>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EntryService } from '../services/entry.service';\nimport { Entry } from '../models/entry';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-entrylist',\n  templateUrl: './entrylist.component.html',\n  styleUrls: ['./entrylist.component.css']\n})\nexport class EntrylistComponent implements OnInit {\n\n  constructor(private entryService: EntryService, private authService: AuthService) { }\n\n  entries: Entry[];\n\n  ngOnInit() {\n    this.entryService.getAllEntries(this.authService.decodedToken.nameId)\n      .subscribe(data => {\n        this.entries = data;\n      });\n  }\n\n  addEntry() {\n    this.entryService.createEntry(this.authService.decodedToken.nameId)\n      .subscribe(data => {\n        this.entries.push(data);\n      });\n  }\n\n  // Triggered by output emitter on child Entry component\n  deleteEntry(entryToDelete: Entry) {\n    this.entries = this.entries.filter(entry => entry.id !== entryToDelete.id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      // perhaps add some alert of notification stuff here.\n      this.router.navigate(['./']);\n      return false;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Fit Logs - Track, Measure, Grow</h1>\\n    <p class=\\\"lead\\\">Track your fitness and journal your progress on your fitness and welbeing journey.</p>\\n    <div *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"registerModeToggle()\\\">Register</div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode()\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  registerModeToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode() {\n    this.registerMode = false;\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRyb3Bkb3duLXRvZ2dsZSwgLmRyb3Bkb3duLWl0ZW0ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXX0= */\"","module.exports = \"\\n<div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n  <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n    Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n  </a>\\n\\n  <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile-settings']\\\"><i class=\\\"fa fa-user\\\"></i>Profile Settings</a>\\n    <div class=\\\"dropdown-divider\\\"></div>\\n    <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\n  </div>\\n</div>\\n\\n<form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"model.username\\\" required>\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.password\\\" required>\\n    <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n  </form>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyjsService } from '../services/alertifyjs.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n\n  constructor(public authService: AuthService, private alertify: AlertifyjsService) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      next => {\n        console.log('Login successful');\n        this.alertify.success('Login successful');\n      },\n      error => {\n        this.alertify.warning('Login failed');\n    });\n  }\n\n  logout() {\n    this.authService.logOut();\n    this.alertify.message('Logged out');\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n}\n","// Entry Model\n\nexport class Entry {\n  id?: number;\n  date: Date;\n  summary?: string;\n  activity?: string;\n  userId?: number;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FitLogs</a>\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/entries']\\\" routerLinkActive=\\\"router-link-active\\\">Entries</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <app-login></app-login>\\r\\n  </div>\\r\\n  </nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGVzZXR0aW5ncy9wcm9maWxlc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Profile Settings</h2>\\n<p>Nothing here yet...<br>\\n  From here you will be able to update your program that is displayed on the entries screen, change your password etc.\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-profilesettings',\n  templateUrl: './profilesettings.component.html',\n  styleUrls: ['./profilesettings.component.css']\n})\nexport class ProfilesettingsComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\" style=\\\"text-align: center\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign-up</h2>\\n\\n  <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" class=\\\"form-conrol\\\" placeholder=\\\"Username\\\" required name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input type=\\\"password\\\" class=\\\"form-conrol\\\" placeholder=\\\"Password\\\" required name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\">\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\n      <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyjsService } from '../services/alertifyjs.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  model: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyjsService) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.authService.register(this.model).subscribe(next => {\n      this.alertify.success('Registration successfull');\n      this.cancelRegister.emit();\n    },\n    error => {\n      this.alertify.error('Registration failed');\n    });\n  }\n\n  cancel() {\n    this.cancelRegister.emit();\n  }\n\n}\n","import { Routes } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { EntrylistComponent } from './entrylist/entrylist.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfilesettingsComponent } from './profilesettings/profilesettings.component';\n\n\n// Works on first match wins..\nexport const routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'entries', component: EntrylistComponent, canActivate: [AuthGuard]},\n  {path: 'profile-settings', component: ProfilesettingsComponent, canActivate: [AuthGuard]},\n  {path: 'register', component: RegisterComponent}\n];\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyjsService {\n\n  constructor() { }\n\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n  baseUrl = environment.apiUrl + 'Auth';\n  jwtHelper = new JwtHelperService;\n  decodedToken: any;\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + '/login', model)\n      .pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n\n          }\n        })\n      );\n  }\n\n  register (model: any) {\n    return this.http.post(this.baseUrl + '/register', model);\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  // if there is already a token stored, parse it\n  parseLocalToken() {\n    const token = localStorage.getItem('token');\n    if (!this.jwtHelper.isTokenExpired(token)) {\n      this.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Entry } from '../models/entry';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n\n// // Eventually this will need to consume API\n// const httpOptions = {\n//      Headers = new HttpHeaders({\n//        'Authorization': 'Bearer: ' + localStorage.getItem('token');\n//      })\n// };\n// Would pass httpOptions with http.xxx function\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntryService {\n  baseUrl = environment.apiUrl + 'Users/Entry/';\n\n  constructor(private http: HttpClient) { }\n\n  getAllEntries(userId: number): Observable<Entry[]> {\n    return this.http.get<Entry[]>(this.baseUrl);\n  }\n\n  updateEntry(userId: number, updatedEntry: Entry): Observable<Entry> {\n    return this.http.put<Entry>(this.baseUrl + updatedEntry.id, updatedEntry);\n  }\n\n  removeEntry(userId: number, remEntry: Entry) {\n    return this.http.delete(this.baseUrl + remEntry.id);\n  }\n\n  createEntry(userId: number): Observable<Entry> {\n    const newEntry: Entry = {\n      'date': new Date(Date.now()),\n      'userId': userId\n    };\n    return this.http.post<Entry>(this.baseUrl, newEntry);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzdW1tYXJ5L3VzZXJzdW1tYXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Summary Stats</h2>\\n<ul>\\n  <li>Bench 80 x5</li>\\n  <li>Chins 20 x5</li>\\n</ul>\\n<br>\\n<p>\\n  Days worked out: 65<br>\\n  Favoutite exercise: Bench x100 times\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usersummary',\n  templateUrl: './usersummary.component.html',\n  styleUrls: ['./usersummary.component.css']\n})\nexport class UsersummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}